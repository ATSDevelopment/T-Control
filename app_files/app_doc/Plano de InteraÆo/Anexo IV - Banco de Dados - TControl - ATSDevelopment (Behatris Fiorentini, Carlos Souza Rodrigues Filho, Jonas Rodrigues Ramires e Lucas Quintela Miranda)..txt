SET OLD_UNIQUE_CHECKS = @@UNIQUE_CHECKS, UNIQUE_CHECKS = 0 ;
SET OLD_FOREIGN_KEY_CHECKS = @@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS = 0 ;
SET OLD_SQL_MODE = @@sql_mode, sql_mode = ' tradicional, ALLOW_INVALID_DATES ' ;


- ------------------------------------------------ -----
- Tabela `tcontrol`.`pessoas`
- ------------------------------------------------ -----
GOTA  TABLE IF EXISTS ` TControl ` . ` PESSOAS ` ;

CRIAR  TABELA  SE NÃO EXISTE ` TControl ` . ` PESSOAS ` (
  ` id_pessoa `  INT  NOT NULL ,
  ` nomo `  VARCHAR ( 45 ) NOT NULL ,
  PRIMARY KEY ( ` id_pessoa ` ))
ENGINE = InnoDB;


- ------------------------------------------------ -----
- Tabela `tcontrol`.`usuarios`
- ------------------------------------------------ -----
GOTA  TABLE IF EXISTS ` TControl ` . ` usuarios ` ;

CRIAR  TABELA  SE NÃO EXISTE ` TControl ` . ` usuarios ` (
  ` id_usuario `  INT  NOT NULL ,
  ` nome_de_usuario `  VARCHAR ( 45 ) NOT NULL ,
  ` password '  VARCHAR ( 45 ) NOT NULL ,
  ` Ativo `  TINYINT ( 1 ) NOT NULL PADRÃO falsa,
  ` exp_data `  TINYINT ( 1 ) NULL ,
  ` administrador `  TINYINT ( 1 ) NOT NULL PADRÃO falsa,
  PRIMARY KEY ( ` id_usuario ` ))
ENGINE = InnoDB;


- ------------------------------------------------ -----
- Tabela `tcontrol`.`funcionarios`
- ------------------------------------------------ -----
GOTA  TABLE IF EXISTS ` TControl ` . ` funcionarios ` ;

CRIAR  TABELA  SE NÃO EXISTE ` TControl ` . ` funcionarios ` (
  ` id_funcionario `  INT  NOT NULL ,
  ` telefone ` MEDIUMTEXT NOT NULL ,
  ` e-mail `  VARCHAR ( 100 ) NOT NULL ,
  ` data_saida `  DATA  NULL ,
  ` id_usuario `  INT  NOT NULL ,
  PRIMARY KEY ( ` id_funcionario ` ),
  CONSTRAINT  ` fk_Funcionarios_Pessoas `
    FOREIGN KEY ( ` id_funcionario ` )
    Referências  ` TControl ` . ` PESSOAS ` ( ` id_pessoa ` )
    ON DELETE NO ACTION
    EM  ACTUALIZAÇÃO NO ACTION,
  CONSTRAINT  ` fk_Funcionarios_Usuarios1 `
    FOREIGN KEY ( ` id_usuario ` )
    Referências  ` TControl ` . ` usuarios ` ( ` id_usuario ` )
    ON DELETE NO ACTION
    EM  ACTUALIZAÇÃO NO ACTION)
ENGINE = InnoDB;

CRIAR  ÍNDICE ` fk_Funcionarios_Usuarios1_idx ` ON  ` TControl ` . ` funcionarios ` ( ` id_usuario `  ASC );


- ------------------------------------------------ -----
- Tabela `tcontrol`.`grupos`
- ------------------------------------------------ -----
GOTA  TABLE IF EXISTS ` TControl ` . ` Grupos ` ;

CRIAR  TABELA  SE NÃO EXISTE ` TControl ` . ` Grupos ` (
  ` id_grupo `  INT  NOT NULL ,
  ` sigla `  VARCHAR ( 10 ) NOT NULL ,
  ` nomo `  VARCHAR ( 100 ) NOT NULL ,
  ` Ativo `  TINYINT ( 1 ) NOT NULL PADRÃO falsa,
  PRIMARY KEY ( ` id_grupo ` ))
ENGINE = InnoDB;


- ------------------------------------------------ -----
- Tabela `tcontrol`.`utilizadores`
- ------------------------------------------------ -----
GOTA  TABLE IF EXISTS ` TControl ` . ` Utilizadores ` ;

CRIAR  TABELA  SE NÃO EXISTE ` TControl ` . ` Utilizadores ` (
  ` id_utilizador `  INT  NOT NULL ,
  ` DSC `  VARCHAR ( 12 ) NOT NULL ,
  ` id_grupo `  INT  NOT NULL ,
  PRIMARY KEY ( ` id_utilizador ` ),
  CONSTRAINT  ` fk_Alunos_Pessoas1 `
    FOREIGN KEY ( ` id_utilizador ` )
    Referências  ` TControl ` . ` PESSOAS ` ( ` id_pessoa ` )
    ON DELETE NO ACTION
    EM  ACTUALIZAÇÃO NO ACTION,
  CONSTRAINT  ` fk_Alunos_cursos1 `
    FOREIGN KEY ( ` id_grupo ` )
    Referências  ` TControl ` . ` grupos ` ( ` id_grupo ` )
    ON DELETE NO ACTION
    EM  ACTUALIZAÇÃO NO ACTION)
ENGINE = InnoDB;

CRIAR  ÍNDICE ` fk_Alunos_cursos1_idx ` ON  ` TControl ` . ` Utilizadores ` ( ` id_grupo `  ASC );


- ------------------------------------------------ -----
- Tabela `tcontrol`.`setores`
- ------------------------------------------------ -----
GOTA  TABLE IF EXISTS ` TControl ` . ` Setores ` ;

CRIAR  TABELA  SE NÃO EXISTE ` TControl ` . ` Setores ` (
  ` id_setor `  INT  NOT NULL ,
  ` nomo `  VARCHAR ( 100 ) NOT NULL ,
  ` sigla `  VARCHAR ( 10 ) NOT NULL ,
  PRIMARY KEY ( ` id_setor ` ))
ENGINE = InnoDB;


- ------------------------------------------------ -----
- Tabela `tcontrol`.`mapa_de_servicos`
- ------------------------------------------------ -----
GOTA  TABLE IF EXISTS ` TControl ` . ` mapa_de_servicos ` ;

CRIAR  TABELA  SE NÃO EXISTE ` TControl ` . ` mapa_de_servicos ` (
  ` id_mapa `  INT  NOT NULL ,
  ` idFuncionario `  INT  NOT NULL ,
  ` idSetor `  INT  NOT NULL ,
  ` horario_entrada `  TEMPO  NOT NULL ,
  ` horario_saida `  TEMPO  NOT NULL ,
  ` seg `  TINYINT ( 1 ) NOT NULL PADRÃO falsa,
  ` ter `  TINYINT ( 1 ) NOT NULL PADRÃO falsa,
  ` qua `  TINYINT ( 1 ) NOT NULL PADRÃO falsa,
  ` qui `  TINYINT ( 1 ) NOT NULL PADRÃO falsa,
  ` sexo '  TINYINT ( 1 ) NOT NULL PADRÃO falsa,
  ` sab `  TINYINT ( 1 ) NOT NULL PADRÃO falsa,
  ` dom `  TINYINT ( 1 ) NOT NULL PADRÃO falsa,
  PRIMARY KEY ( ` id_mapa ` ),
  CONSTRAINT  ` fk_mapa_de_servicos_Setores1 `
    FOREIGN KEY ( ` idSetor ` )
    Referências  ` TControl ` . ` Setores ` ( ` id_setor ` )
    ON DELETE NO ACTION
    EM  ACTUALIZAÇÃO NO ACTION,
  CONSTRAINT  ` fk_mapa_de_servicos_Funcionarios1 `
    FOREIGN KEY ( ` idFuncionario ` )
    Referências  ` TControl ` . ` funcionarios ` ( ` id_funcionario ` )
    ON DELETE NO ACTION
    EM  ACTUALIZAÇÃO NO ACTION)
ENGINE = InnoDB;

CRIAR  ÍNDICE ` fk_mapa_de_servicos_Setores1_idx ` ON  ` TControl ` . ` mapa_de_servicos ` ( ` idSetor `  ASC );

CREATE  INDEX ` fk_mapa_de_servicos_Funcionarios1_idx ` ON  ` tcontrol ` . ` mapa_de_servicos ` ( ` idFuncionario `  ASC );


- ------------------------------------------------ -----
- Tabela `tcontrol`.`excecoes`
- ------------------------------------------------ -----
GOTA  TABLE IF EXISTS ` TControl ` . ` excecoes ` ;

CRIAR  TABELA  SE NÃO EXISTE ` TControl ` . ` excecoes ` (
  ` id_exececao `  INT  NOT NULL ,
  ` mapa_de_servicos_id_mapa `  INT  NOT NULL ,
  ` data_excecao `  DATE  NOT NULL ,
  PRIMARY KEY ( ` id_exececao ` ),
  CONSTRAINT  ` fk_excecoes_mapa_de_servicos1 `
    FOREIGN KEY ( ` mapa_de_servicos_id_mapa ` )
    Referências  ` TControl ` . ` mapa_de_servicos ` ( ` id_mapa ` )
    ON DELETE NO ACTION
    EM  ACTUALIZAÇÃO NO ACTION)
ENGINE = InnoDB;

CREATE  INDEX ` fk_excecoes_mapa_de_servicos1_idx ` ON  ` tcontrol ` . ` excecoes ` ( ` mapa_de_servicos_id_mapa `  ASC );


- ------------------------------------------------ -----
- Tabela `tcontrol`.`terminais`
- ------------------------------------------------ -----
GOTA  TABLE IF EXISTS ` TControl ` . ` Terminais ` ;

CRIAR  TABELA  SE NÃO EXISTE ` TControl ` . ` Terminais ` (
  ` id_terminal `  INT  NOT NULL ,
  ` hostname `  VARCHAR ( 45 ) NOT NULL ,
  ` ip_address `  VARCHAR ( 15 ) NOT NULL ,
  ` Ativo `  TINYINT ( 1 ) NOT NULL ,
  ` id_setor `  INT  NOT NULL ,
  PRIMARY KEY ( ` id_terminal ` ),
  CONSTRAINT  ` fk_terminais_Setores1 `
    FOREIGN KEY ( ` id_setor ` )
    Referências  ` TControl ` . ` Setores ` ( ` id_setor ` )
    ON DELETE NO ACTION
    EM  ACTUALIZAÇÃO NO ACTION)
ENGINE = InnoDB;

CRIAR  ÍNDICE ` fk_terminais_Setores1_idx ` ON  ` TControl ` . ` Terminais ` ( ` id_setor `  ASC );


- ------------------------------------------------ -----
- Tabela `tcontrol`.`bloqueios`
- ------------------------------------------------ -----
GOTA  TABLE IF EXISTS ` TControl ` . ` bloqueios ` ;

CRIAR  TABELA  SE NÃO EXISTE ` TControl ` . ` bloqueios ` (
  ` id_bloqueio `  INT  NOT NULL ,
  ` data_inicio ` DATETIME NOT NULL ,
  ` data_fim ` DATETIME NULL ,
  ` DSC `  VARCHAR ( 100 ) NULL ,
  ` id_aluno `  INT  NOT NULL ,
  PRIMARY KEY ( ` id_bloqueio ` ),
  CONSTRAINT  ` fk_bloqueio_aluno_Alunos1 `
    FOREIGN KEY ( ` id_aluno ` )
    Referências  ` TControl ` . ` Utilizadores ` ( ` id_utilizador ` )
    ON DELETE NO ACTION
    EM  ACTUALIZAÇÃO NO ACTION)
ENGINE = InnoDB;

CRIAR  ÍNDICE ` fk_bloqueio_aluno_Alunos1_idx ` ON  ` TControl ` . ` bloqueios ` ( ` id_aluno `  ASC );


- ------------------------------------------------ -----
- Tabela `tcontrol`.`bloqueios_setores`
- ------------------------------------------------ -----
GOTA  TABLE IF EXISTS ` TControl ` . ` bloqueios_setores ` ;

CRIAR  TABELA  SE NÃO EXISTE ` TControl ` . ` bloqueios_setores ` (
  ` id_bloqueio `  INT  NOT NULL ,
  ` id_setor `  INT  NOT NULL ,
  CONSTRAINT  ` fk_bloqueios_setores_bloqueios1 `
    FOREIGN KEY ( ` id_bloqueio ` )
    Referências  ` TControl ` . ` bloqueios ` ( ` id_bloqueio ` )
    ON DELETE NO ACTION
    EM  ACTUALIZAÇÃO NO ACTION,
  CONSTRAINT  ` fk_bloqueios_setores_setores1 `
    FOREIGN KEY ( ` id_setor ` )
    Referências  ` TControl ` . ` Setores ` ( ` id_setor ` )
    ON DELETE NO ACTION
    EM  ACTUALIZAÇÃO NO ACTION)
ENGINE = InnoDB;

CRIAR  ÍNDICE ` fk_bloqueios_setores_bloqueios1_idx ` ON  ` TControl ` . ` bloqueios_setores ` ( ` id_bloqueio `  ASC );

CRIAR  ÍNDICE ` fk_bloqueios_setores_setores1_idx ` ON  ` TControl ` . ` bloqueios_setores ` ( ` id_setor `  ASC );


- ------------------------------------------------ -----
- Tabela `tcontrol`.`bloqueios_terminais`
- ------------------------------------------------ -----
GOTA  TABLE IF EXISTS ` TControl ` . ` bloqueios_terminais ` ;

CRIAR  TABELA  SE NÃO EXISTE ` TControl ` . ` bloqueios_terminais ` (
  ` id_bloqueio `  INT  NOT NULL ,
  ` id_terminail `  INT  NOT NULL ,
  CONSTRAINT  ` fk_bloqueios_terminais_bloqueios1 `
    FOREIGN KEY ( ` id_bloqueio ` )
    Referências  ` TControl ` . ` bloqueios ` ( ` id_bloqueio ` )
    ON DELETE NO ACTION
    EM  ACTUALIZAÇÃO NO ACTION,
  CONSTRAINT  ` fk_bloqueios_terminais_terminais1 `
    FOREIGN KEY ( ` id_terminail ` )
    Referências  ` TControl ` . ` Terminais ` ( ` id_terminal ` )
    ON DELETE NO ACTION
    EM  ACTUALIZAÇÃO NO ACTION)
ENGINE = InnoDB;

CREATE  INDEX ` fk_bloqueios_terminais_bloqueios1_idx ` ON  ` tcontrol ` . ` bloqueios_terminais ` ( ` id_bloqueio `  ASC );

CREATE  INDEX ` fk_bloqueios_terminais_terminais1_idx ` ON  ` tcontrol ` . ` bloqueios_terminais ` ( ` id_terminail `  ASC );


- ------------------------------------------------ -----
- Tabela `tcontrol`.`bloqueios_grupo`
- ------------------------------------------------ -----
GOTA  TABLE IF EXISTS ` TControl ` . ` bloqueios_grupo ` ;

CRIAR  TABELA  SE NÃO EXISTE ` TControl ` . ` bloqueios_grupo ` (
  ` id_bloqueio `  INT  NOT NULL ,
  ` id_curso `  INT  NOT NULL ,
  CONSTRAINT  ` fk_bloqueios_cursos_cursos1 `
    FOREIGN KEY ( ` id_curso ` )
    Referências  ` TControl ` . ` grupos ` ( ` id_grupo ` )
    ON DELETE NO ACTION
    EM  ACTUALIZAÇÃO NO ACTION,
  CONSTRAINT  ` fk_bloqueios_cursos_bloqueios1 `
    FOREIGN KEY ( ` id_bloqueio ` )
    Referências  ` TControl ` . ` bloqueios ` ( ` id_bloqueio ` )
    ON DELETE NO ACTION
    EM  ACTUALIZAÇÃO NO ACTION)
ENGINE = InnoDB;

CRIAR  ÍNDICE ` fk_bloqueios_cursos_cursos1_idx ` ON  ` TControl ` . ` bloqueios_grupo ` ( ` id_curso `  ASC );

CRIAR  ÍNDICE ` fk_bloqueios_cursos_bloqueios1_idx ` ON  ` TControl ` . ` bloqueios_grupo ` ( ` id_bloqueio `  ASC );


- ------------------------------------------------ -----
- Tabela `tcontrol`.`registros`
- ------------------------------------------------ -----
GOTA  TABLE IF EXISTS ` TControl ` . ` Registros ` ;

CRIAR  TABELA  SE NÃO EXISTE ` TControl ` . ` Registros ` (
  ` id_registros `  INT  NOT NULL ,
  ` id_utilizador `  INT  NOT NULL ,
  ` id_terminal `  INT  NOT NULL ,
  ` id_funcionario `  INT  NOT NULL ,
  ` data_entrada `  DATE  NOT NULL ,
  ` data_saida `  DATA  NULL ,
  PRIMARY KEY ( ` id_registros ` ),
  CONSTRAINT  ` fk_registros_Alunos1 `
    FOREIGN KEY ( ` id_utilizador ` )
    Referências  ` TControl ` . ` Utilizadores ` ( ` id_utilizador ` )
    ON DELETE NO ACTION
    EM  ACTUALIZAÇÃO NO ACTION,
  CONSTRAINT  ` fk_registros_terminais1 `
    FOREIGN KEY ( ` id_terminal ` )
    Referências  ` TControl ` . ` Terminais ` ( ` id_terminal ` )
    ON DELETE NO ACTION
    EM  ACTUALIZAÇÃO NO ACTION,
  CONSTRAINT  ` fk_registros_Funcionarios1 `
    FOREIGN KEY ( ` id_funcionario ` )
    Referências  ` TControl ` . ` funcionarios ` ( ` id_funcionario ` )
    ON DELETE NO ACTION
    EM  ACTUALIZAÇÃO NO ACTION)
ENGINE = InnoDB;

CRIAR  ÍNDICE ` fk_registros_Alunos1_idx ` ON  ` TControl ` . ` Registros ` ( ` id_utilizador `  ASC );

CRIAR  ÍNDICE ` fk_registros_terminais1_idx ` ON  ` TControl ` . ` Registros ` ( ` id_terminal `  ASC );

CRIAR  ÍNDICE ` fk_registros_Funcionarios1_idx ` ON  ` TControl ` . ` Registros ` ( ` id_funcionario `  ASC );


SET sql_mode = OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS = OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS = OLD_UNIQUE_CHECKS;